{"version":3,"sources":["actions/listsActions.js","actions/index.js","reducers/cardsReducer.js","reducers/listsReducer.js","reducers/boardsReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/Card/TrelloCardStyle.js","components/Card/TrelloCard.js","actions/cardsActions.js","components/ActionButton/TrelloActionButton.js","components/List/TrelloListStyle.js","components/List/TrelloList.js","components/BoardNav/BoardNavStyle.js","components/BoardMenu/BoardMenuStyle.js","components/Background/BackgroundSelectionStyle.js","components/Background/BackgroundSelection.js","actions/boardsAction.js","components/BoardMenu/BoardMenu.js","components/BoardNav/BoardNav.js","components/App/AppStyle.js","components/App/App.js","serviceWorker.js","index.js","components/Background/images/scene1.jpg","components/Background/images/scene2.jpg","components/Background/images/scene3.jpg","components/Background/images/scene4.jpg","components/Background/images/scene5.jpg","components/Background/images/scene6.jpg","components/Background/images/scene7.jpg","components/Background/images/scene8.jpg","components/Background/images/scene9.jpg","components/Background/images/sunset.jpg"],"names":["sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","type","dispatch","getState","action","actionTypes","DRAG_HAPPENED","boardId","payload","ADD_CARD","EDIT_CARD","DELETE_CARD","ADD_LIST","EDIT_LIST_TITLE","DELETE_LIST","EDIT_BOARD_TITLE","TOGGLE_BOARD_FAV","TOGGLE_BOARD_PRIVACY","EDIT_BACKGROUND","initialState","text","id","list","cardsReducer","state","listId","newCard","newText","card","console","log","newState","_","omit","title","cards","listsReducer","newList","push","splice","listStart","listEnd","newCards","filter","cardId","newTitle","lists","fav","privacy","background","boardsReducer","board","newListId","newLists","pulledOutList","ADD_BOARD","newID","newBoard","priv","combineReducers","boards","persistConfig","key","storage","persistedReducer","persistReducer","reducers","store","createStore","compose","applyMiddleware","thunk","persistor","persistStore","Container","styled","div","StyledCard","Card","StyledTextArea","Textarea","ButtonContainer","StyledIcon","Icon","TrelloForm","React","memo","onChange","closeForm","children","placeholder","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton","onClick","variant","CardContainer","EditButton","DeleteButton","connect","editCard","deleteCard","index","useState","isEditing","setIsEditing","cardText","setText","handleChange","target","saveCard","preventDefault","String","provider","ref","innerRef","draggableProps","dragHandleProps","onDoubleClick","fontSize","CardContent","Typography","gutterBottom","TrelloActionButton","formOpen","renderAddButton","props","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","openForm","style","styles","openFormButtonGroup","opacity","color","minWidth","setState","handleInputChange","renderForm","buttonTitle","overflow","minHeight","padding","resize","width","outline","border","formButtonGroup","addList","addCard","backgroundColor","marginLeft","cursor","this","Component","display","alignItems","borderRadius","height","paddingLeft","marginTop","uuid","ListContainer","FormEdit","form","StyledInput","input","TitleContainer","ListTitle","h4","ownProps","cardList","deleteList","editListTitle","listTitle","setListTitle","handleFocus","handleFinishEditing","handleDeleteList","droppableId","droppableProps","onSubmit","onFocus","map","BoardNavWrapper","BoardNavMain","NavButton","button","BoardStar","BoardTitle","Divider","span","BoardPriv","BoardIcon","Menu","Selection","ColorSelection","bg","ImageSelection","ButtonGroup","backgrounds","Colors","Images","Scene1","Scene2","Scene3","Scene4","Scene5","Scene6","Scene7","Scene8","Scene9","Sunset","editBackground","openColor","setOpenColor","toggleSelectionGroup","btn","textAlign","ListItemText","image","margin","useStyles","makeStyles","fullList","BoardMenu","classes","top","left","bottom","right","toggleDrawer","side","open","event","Drawer","anchor","onClose","className","role","_boardTitle","boardFav","boardPriv","editBoardTitle","toggleBoardFav","toggleBoardPrivacy","boardTitle","setBoardTitle","AppWrapper","App","onDragEnd","result","destination","source","backgroundImage","direction","Object","values","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a5dc3c0f.chunk.js","sourcesContent":["import { actionTypes, action } from \".\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addList = title => (dispatch, getState) => {\r\n  /* const boardId = getState().activeBoard; */\r\n  const boardId = \"board-0\";\r\n  const id = uuid();\r\n  dispatch(action(actionTypes.ADD_LIST, { title, boardId, id }));\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return (dispatch, getState) => {\r\n    /* const boardId = getState().activeBoard; */\r\n    const boardId = \"board-0\";\r\n    dispatch(\r\n      action(actionTypes.DRAG_HAPPENED, {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n        draggableId,\r\n        type,\r\n        boardId\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const editListTitle = (listId, newTitle) =>\r\n  action(actionTypes.EDIT_LIST_TITLE, { listId, newTitle });\r\n\r\nexport const deleteList = listId => {\r\n  /* const boardId = getState().activeBoard; */\r\n  const boardId = \"board-0\";\r\n  return action(actionTypes.DELETE_LIST, { listId, boardId });\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\nexport * from \"./boardsAction\";\r\n\r\nexport const action = (type, payload) => ({ type, payload });\r\n\r\nexport const actionTypes = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_BOARD_TITLE: \"EDIT_BOARD_TITLE\",\r\n  TOGGLE_BOARD_FAV: \"TOGGLE_BOARD_FAV\",\r\n  TOGGLE_BOARD_PRIVACY: \"TOGGLE_BOARD_PRIVACY\",\r\n  EDIT_BACKGROUND: \"EDIT_BACKGROUND\"\r\n};\r\n","import { actionTypes } from \"../actions\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  \"card-0\": {\r\n    text: \"Scroll to see other lists on this board.\",\r\n    id: `card-0`,\r\n    list: \"list-0\"\r\n  },\r\n  \"card-1\": {\r\n    text: \"Click and drag a card or list to move it around. Try now!\",\r\n    id: `card-1`,\r\n    list: \"list-0\"\r\n  },\r\n  \"card-2\": {\r\n    text:\r\n      \"Double click on this card or click on the pen icon to edit its content.\",\r\n    id: `card-2`,\r\n    list: \"list-0\"\r\n  },\r\n  \"card-3\": {\r\n    text:\r\n      \"Make mistakes? You can delete any cards in a instance. Be careful tho!\",\r\n    id: `card-3`,\r\n    list: \"list-0\"\r\n  },\r\n  \"card-5\": {\r\n    text: \"This is my email btw khuctrang1812@gmail.com\",\r\n    id: `card-5`,\r\n    list: \"list-0\"\r\n  },\r\n  \"card-7\": {\r\n    text: \"Try Background Settings on the top right of the page.\",\r\n    id: `card-7`,\r\n    list: \"list-1\"\r\n  }\r\n};\r\n\r\nconst cardsReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD_CARD: {\r\n      const { text, listId, id } = payload;\r\n\r\n      const newCard = {\r\n        text,\r\n        id: `card-${id}`,\r\n        list: listId\r\n      };\r\n\r\n      return { ...state, [`card-${id}`]: newCard };\r\n    }\r\n    case actionTypes.EDIT_CARD: {\r\n      const { id, newText } = payload;\r\n      const card = state[id];\r\n      card.text = newText;\r\n      return { ...state, [id]: card };\r\n    }\r\n\r\n    case actionTypes.DELETE_CARD: {\r\n      console.log(\"delete card reducer called\");\r\n      const { id } = payload;\r\n      const newState = _.omit(state, [id]);\r\n\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import { actionTypes } from \"../actions\";\r\nimport _ from \"lodash\";\r\n\r\nconst initialState = {\r\n  \"list-0\": {\r\n    title: \"Stuff to Try (this is a list)\",\r\n    id: \"list-0\",\r\n    cards: [\"card-0\", \"card-1\", \"card-2\", \"card-3\", \"card-5\"]\r\n  },\r\n  \"list-1\": {\r\n    title: \"Tried It (another list)\",\r\n    id: \"list-1\",\r\n    cards: [\"card-7\"]\r\n  }\r\n};\r\n\r\nconst listsReducer = (state = initialState, { type, payload }) => {\r\n  console.log(\"type\");\r\n  console.log(type);\r\n\r\n  switch (type) {\r\n    /* ADD_LIST */\r\n    case actionTypes.ADD_LIST:\r\n      console.log(\"add list on list reducer\");\r\n      const { title, id } = payload;\r\n      const newList = { title, id: `list-${id}`, cards: [] };\r\n      console.log(\"new state\");\r\n      console.log({ ...state, [`list-${id}`]: newList });\r\n      return { ...state, [`list-${id}`]: newList };\r\n\r\n    /* ADD_CARD */\r\n    case actionTypes.ADD_CARD: {\r\n      console.log(\"add card on list reducer\");\r\n      const { id, listId } = payload;\r\n      const list = state[listId];\r\n      list.cards.push(`card-${id}`);\r\n      console.log(\"new state\");\r\n      console.log({ ...state, [listId]: list });\r\n      return { ...state, [listId]: list };\r\n    }\r\n\r\n    /* DRAG_HAPPENED */\r\n    case actionTypes.DRAG_HAPPENED:\r\n      console.log(\"drage happened on list reducer\");\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n        type\r\n      } = payload;\r\n      console.log(type);\r\n\r\n      // dragging lists\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // dragging cards\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      }\r\n\r\n      // other list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the list where the drag happened\r\n        const listStart = state[droppableIdStart];\r\n        // pull out the card from this list\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        // find the list where the drag ended\r\n        const listEnd = state[droppableIdEnd];\r\n\r\n        // put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: listStart,\r\n          [droppableIdEnd]: listEnd\r\n        };\r\n      }\r\n      return state;\r\n\r\n    /* DELETE_CARD */\r\n    case actionTypes.DELETE_CARD: {\r\n      console.log(\"delete card on list reducer\");\r\n      const { listId, id } = payload;\r\n\r\n      const list = state[listId];\r\n      const newCards = list.cards.filter(cardId => cardId !== id);\r\n\r\n      return { ...state, [listId]: { ...list, cards: newCards } };\r\n    }\r\n\r\n    /* DELETE_LIST_TITLE */\r\n    case actionTypes.EDIT_LIST_TITLE: {\r\n      console.log(\"edit list title on list reducer\");\r\n      const { listId, newTitle } = payload;\r\n\r\n      const list = state[listId];\r\n      list.title = newTitle;\r\n      return { ...state, [listId]: list };\r\n    }\r\n\r\n    /* DELETE_LIST */\r\n    case actionTypes.DELETE_LIST: {\r\n      console.log(\"delete list on list reducer\");\r\n      console.log(\"ahihihih\");\r\n      const { listId } = payload;\r\n      const newState = _.omit(state, [listId]);\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      console.log(\"default on list reducer\");\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { actionTypes } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-0\": {\r\n    id: \"board-0\",\r\n    lists: [\"list-0\", \"list-1\"],\r\n    title: \"How to use Trello\",\r\n    fav: false,\r\n    privacy: false,\r\n    background: {\r\n      type: \"image\",\r\n      background: \"/trello-clone/static/media/scene3.4be96530.jpg\"\r\n    }\r\n  }\r\n};\r\n\r\nconst boardsReducer = (state = initialState, { type, payload }) => {\r\n  console.log(\"board reducer called\");\r\n  console.log(type);\r\n  switch (type) {\r\n    case actionTypes.ADD_LIST: {\r\n      const { boardId, id } = payload;\r\n      const board = state[boardId];\r\n      const newListId = `list-${id}`;\r\n      const newLists = [...board.lists, newListId];\r\n      board.lists = newLists;\r\n      return { ...state, [boardId]: board };\r\n    }\r\n\r\n    case actionTypes.DRAG_HAPPENED: {\r\n      /* const { boardId } = payload; */\r\n      const boardId = \"board-0\";\r\n      const board = state[boardId];\r\n      const lists = board.lists;\r\n      const {\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = payload;\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        console.log(\"drag list around\");\r\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\r\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n        board.lists = lists;\r\n\r\n        return { ...state, [boardId]: board };\r\n      }\r\n      return state;\r\n    }\r\n    case actionTypes.DELETE_LIST: {\r\n      const { listId, boardId } = payload;\r\n      const board = state[boardId];\r\n      const lists = board.lists;\r\n      const newLists = lists.filter(id => id !== listId);\r\n      board.lists = newLists;\r\n      return { ...state, [boardId]: board };\r\n    }\r\n\r\n    case actionTypes.ADD_BOARD: {\r\n      const { title, id } = payload;\r\n      const newID = `board-${id}`;\r\n      const newBoard = {\r\n        id: newID,\r\n        title,\r\n        lists: []\r\n      };\r\n\r\n      return { ...state, [newID]: newBoard };\r\n    }\r\n\r\n    case actionTypes.EDIT_BOARD_TITLE: {\r\n      const { title } = payload;\r\n      const boardId = \"board-0\";\r\n      /* const {boardId, title} = payload;  */\r\n      const board = state[boardId];\r\n      return { ...state, [boardId]: { ...board, title: title } };\r\n    }\r\n\r\n    case actionTypes.TOGGLE_BOARD_FAV: {\r\n      const boardId = \"board-0\";\r\n      const board = state[boardId];\r\n      const fav = !board.fav;\r\n      return { ...state, [boardId]: { ...board, fav: fav } };\r\n    }\r\n\r\n    case actionTypes.TOGGLE_BOARD_PRIVACY: {\r\n      const boardId = \"board-0\";\r\n      const board = state[boardId];\r\n      const priv = !board.privacy;\r\n      return { ...state, [boardId]: { ...board, privacy: priv } };\r\n    }\r\n\r\n    case actionTypes.EDIT_BACKGROUND: {\r\n      const { type, background } = payload;\r\n      const boardId = \"board-0\";\r\n      const board = state[boardId];\r\n      /* const background = board.background; */\r\n      return {\r\n        ...state,\r\n        [boardId]: { ...board, background: { type, background } }\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"./cardsReducer\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport boardsReducer from \"./boardsReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer,\r\n  cards: cardsReducer,\r\n  boards: boardsReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\n/* const reducer = () => {}; */\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = createStore(persistedReducer, compose(applyMiddleware(thunk)));\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default () => ({ store, persistor });\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TrelloForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrelloForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;\r\n","import styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const CardContainer = styled.div`\r\n  margin-bottom: 8px;\r\n  position: relative;\r\n`;\r\n\r\nexport const EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TrelloForm from \"../TrelloForm\";\r\nimport TrelloButton from \"../TrelloButton\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport { CardContainer, EditButton, DeleteButton } from \"./TrelloCardStyle\";\r\n\r\nimport { editCard, deleteCard } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TrelloCard = ({ text, id, listId, index, editCard, deleteCard }) => {\r\n  /* EDIT FUNCTION */\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const handleChange = e => {\r\n    console.log(\"setText\");\r\n    console.log(setText);\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    // redux\r\n    e.preventDefault();\r\n    editCard(id, listId, cardText);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\r\n      </TrelloForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provider => (\r\n          <CardContainer\r\n            ref={provider.innerRef}\r\n            {...provider.draggableProps}\r\n            {...provider.dragHandleProps}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n\r\n              <DeleteButton\r\n                fontSize=\"small\"\r\n                onMouseDown={() => deleteCard(id, listId)}\r\n              >\r\n                delete\r\n              </DeleteButton>\r\n\r\n              <CardContent>\r\n                <Typography gutterBottom>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n};\r\n\r\nexport default connect(null, { editCard, deleteCard })(TrelloCard);\r\n","import { actionTypes, action } from \".\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const addCard = (listId, text) => {\r\n  const id = uuid();\r\n  return action(actionTypes.ADD_CARD, { listId, text, id });\r\n};\r\n\r\nexport const editCard = (id, listId, newText) =>\r\n  action(actionTypes.EDIT_CARD, { id, listId, newText });\r\n\r\nexport const deleteCard = (id, listId) =>\r\n  action(actionTypes.DELETE_CARD, { id, listId });\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../../actions\";\r\n\r\nclass TrelloActionButton extends React.Component {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  renderAddButton = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0, 0, 0, .15\" : \"inherit\";\r\n\r\n    return (\r\n      <div\r\n        onClick={this.openForm}\r\n        style={{\r\n          ...styles.openFormButtonGroup,\r\n          opacity: buttonTextOpacity,\r\n          color: buttonTextColor,\r\n          background: buttonTextBackground,\r\n          minWidth: 228\r\n        }}\r\n      >\r\n        <Icon>add</Icon>\r\n        <p>{buttonText}</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = () => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  renderForm = () => {\r\n    const { list } = this.props;\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    const buttonTitle = list ? \"Add List\" : \"Add Card\";\r\n\r\n    const onFormSubmit = () => {\r\n      if (this.state.text) {\r\n        this.setState({ text: \"\" });\r\n        list\r\n          ? this.props.addList(this.state.text)\r\n          : this.props.addCard(this.props.listId, this.state.text);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          style={{\r\n            overflow: \"visible\",\r\n            minHeight: 80,\r\n            minWidth: 228,\r\n            padding: \"6px 8px 2px\"\r\n          }}\r\n        >\r\n          <TextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onBlur={this.closeForm}\r\n            value={this.state.text}\r\n            onChange={this.handleInputChange}\r\n            style={{\r\n              resize: \"none\",\r\n              width: \"100%\",\r\n              outline: \"none\",\r\n              border: \"none\"\r\n            }}\r\n          />\r\n        </Card>\r\n        <div style={styles.formButtonGroup}>\r\n          <Button\r\n            onMouseDown={onFormSubmit}\r\n            variant=\"contained\"\r\n            style={{ color: \"white\", backgroundColor: \"#5aac44\" }}\r\n          >\r\n            {buttonTitle}\r\n          </Button>\r\n          <Icon style={{ marginLeft: 8, cursor: \"pointer\" }}>close</Icon>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  openFormButtonGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\",\r\n    borderRadius: 3,\r\n    height: 36,\r\n    width: 228,\r\n    paddingLeft: 10\r\n  },\r\n  formButtonGroup: {\r\n    marginTop: 8,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nexport default connect(null, { addList, addCard })(TrelloActionButton);\r\n","import styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nexport const ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  margin: 0 10px 0 0;\r\n`;\r\n\r\nexport const FormEdit = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 100%;\r\n  min-height: 40px;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  /* margin-bottom: 3px;\r\n  padding: 5px; */\r\n  padding: 12px 20px;\r\n  margin: 8px 0;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TrelloCard from \"../Card/TrelloCard\";\r\nimport TrelloActionButton from \"../ActionButton/TrelloActionButton\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { editListTitle, deleteList } from \"../../actions\";\r\n\r\nimport {\r\n  ListContainer,\r\n  TitleContainer,\r\n  DeleteButton,\r\n  ListTitle,\r\n  StyledInput,\r\n  FormEdit\r\n} from \"./TrelloListStyle\";\r\n\r\nconst TrelloList = ({\r\n  title,\r\n  cards,\r\n  listId,\r\n  index,\r\n  cardList,\r\n  deleteList,\r\n  editListTitle,\r\n  dispatch\r\n}) => {\r\n  console.log(cards);\r\n  /* console.log(cardList); */\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <FormEdit onSubmit={handleFinishEditing}>\r\n        <StyledInput\r\n          type=\"text\"\r\n          value={listTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={handleFinishEditing}\r\n        />\r\n      </FormEdit>\r\n    );\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    console.log(\"hi\");\r\n\r\n    /* e.target.select(); */\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    editListTitle(listId, listTitle);\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    deleteList(listId);\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listId)} index={index}>\r\n      {provider => (\r\n        <ListContainer\r\n          {...provider.draggableProps}\r\n          ref={provider.innerRef}\r\n          {...provider.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={String(listId)} type=\"card\">\r\n            {provider => (\r\n              <div\r\n                {...provider.droppableProps}\r\n                ref={provider.innerRef}\r\n                style={{ width: 285 }}\r\n              >\r\n                {isEditing ? (\r\n                  renderEditInput()\r\n                ) : (\r\n                  <TitleContainer onClick={() => setIsEditing(true)}>\r\n                    <ListTitle>{listTitle}</ListTitle>\r\n                    <DeleteButton onClick={handleDeleteList}>\r\n                      delete\r\n                    </DeleteButton>\r\n                  </TitleContainer>\r\n                )}\r\n                {cards.map((cardId, index) => {\r\n                  const card = cardList[cardId];\r\n                  return (\r\n                    <TrelloCard\r\n                      key={card.id}\r\n                      text={card.text}\r\n                      id={card.id}\r\n                      index={index}\r\n                      listId={listId}\r\n                    />\r\n                  );\r\n                })}\r\n                {provider.placeholder}\r\n                <TrelloActionButton listId={listId} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { listId } = ownProps;\r\n  const list = state.lists[listId];\r\n  return { cardList: state.cards, cards: list.cards, title: list.title };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteList, editListTitle })(\r\n  TrelloList\r\n);\r\n","import styled from \"styled-components\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport { mobile } from \"../../styles/mediaQueris\";\r\n\r\nexport const BoardNavWrapper = styled.div`\r\n  width: 100ww;\r\n  border: 0px;\r\n  border-radius: 0.3rem;\r\n  background: rgba(0, 0, 0, 0.15);\r\n  color: white;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n  }\r\n  padding: 0.5rem;\r\n  font-size: 1rem;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const BoardNavMain = styled.div`\r\n  min-height: 43px;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 3;\r\n\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const NavButton = styled.button`\r\n  border: 0px;\r\n  outline: none;\r\n  border-radius: 0.3rem;\r\n  background-color: rgba(255, 255, 255, 0.4);\r\n  color: white;\r\n  padding: 0.4rem 1rem;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.35);\r\n  }\r\n`;\r\n\r\nexport const BoardStar = styled(NavButton)`\r\n  /* padding: 1.1rem; */\r\n  font-size: 0.8rem;\r\n  background-color: rgba(255, 255, 255, 0);\r\n`;\r\n\r\nexport const BoardTitle = styled(NavButton)`\r\n  font-size: 1.4rem;\r\n  font-weight: 700;\r\n  background-color: transparent;\r\n`;\r\n\r\nexport const Divider = styled.span`\r\n  width: 2px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  height: 1.6rem;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const BoardPriv = styled(NavButton)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 110px;\r\n`;\r\n\r\nexport const BoardIcon = styled(Icon)`\r\n  font-size: 1.3rem !important;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  border: none;\r\n  outline-color: blue;\r\n  box-sizing: border-box;\r\n  font-size: 1.3rem;\r\n  border-radius: 0.3rem;\r\n  padding: 0.4rem 1rem;\r\n  margin-left: 10px;\r\n  width: auto;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Menu = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nconst Selection = styled.div`\r\n  height: 100px;\r\n  width: 100px;\r\n  color: white !important;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n  display: inline-block;\r\n  margin: 10px;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const ColorSelection = styled(Selection)`\r\n  background-color: ${props => props.bg};\r\n`;\r\n\r\nexport const ImageSelection = styled(Selection)`\r\n  background-image: url(${props => props.bg});\r\n  width: 180px;\r\n  height: 120px;\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { editBackground } from \"../../actions\";\r\n\r\nimport {\r\n  ColorSelection,\r\n  ImageSelection,\r\n  ButtonGroup\r\n} from \"./BackgroundSelectionStyle\";\r\n\r\nimport Scene1 from \"./images/scene1.jpg\";\r\nimport Scene2 from \"./images/scene2.jpg\";\r\nimport Scene3 from \"./images/scene3.jpg\";\r\nimport Scene4 from \"./images/scene4.jpg\";\r\nimport Scene5 from \"./images/scene5.jpg\";\r\nimport Scene6 from \"./images/scene6.jpg\";\r\nimport Scene7 from \"./images/scene7.jpg\";\r\nimport Scene8 from \"./images/scene8.jpg\";\r\nimport Scene9 from \"./images/scene9.jpg\";\r\nimport Sunset from \"./images/sunset.jpg\";\r\n\r\nlet backgrounds = {\r\n  Colors: [\r\n    \"#3D348B\",\r\n    \"#7678ED\",\r\n    \"#F7B801\",\r\n    \"#F18701\",\r\n    \"#F35B04\",\r\n    \"#119DA4\",\r\n    \"#19647E\",\r\n    \"#48494b\"\r\n  ],\r\n  Images: [\r\n    Scene1,\r\n    Scene2,\r\n    Scene3,\r\n    Scene4,\r\n    Scene5,\r\n    Scene6,\r\n    Scene7,\r\n    Scene8,\r\n    Scene9,\r\n    Sunset\r\n  ]\r\n};\r\n\r\nconst BackgroundSelection = ({ editBackground }) => {\r\n  const [openColor, setOpenColor] = useState(true);\r\n\r\n  const toggleSelectionGroup = btn => {\r\n    btn === \"color\" ? setOpenColor(true) : setOpenColor(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, textAlign: \"center\" }}>\r\n      <ButtonGroup>\r\n        <Button onClick={() => toggleSelectionGroup(\"color\")}>Color</Button>\r\n        <Button onClick={() => toggleSelectionGroup(\"image\")}>Image</Button>\r\n      </ButtonGroup>\r\n      {openColor\r\n        ? backgrounds.Colors.map(color => (\r\n            <ColorSelection\r\n              button\r\n              key={color}\r\n              bg={color}\r\n              onClick={() => editBackground(\"color\", color)}\r\n            >\r\n              <ListItemText>{color}</ListItemText>\r\n            </ColorSelection>\r\n          ))\r\n        : backgrounds.Images.map(image => {\r\n            console.log(image);\r\n            return (\r\n              <ImageSelection\r\n                button\r\n                key={image}\r\n                bg={image}\r\n                onClick={() => editBackground(\"image\", image)}\r\n              ></ImageSelection>\r\n            );\r\n          })}\r\n      <Divider style={{ margin: 30 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { editBackground })(BackgroundSelection);\r\n","import { actionTypes, action } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const setActiveBoard = id =>\r\n  action(actionTypes.SET_ACTIVE_BOARD, { id });\r\n\r\nexport const addBoard = title => {\r\n  const id = uuid();\r\n  return {\r\n    type: actionTypes.ADD_BOARD,\r\n    payload: { title, id }\r\n  };\r\n};\r\n\r\nexport const editBoardTitle = (boardId, title) =>\r\n  action(actionTypes.EDIT_BOARD_TITLE, { title, boardId });\r\n\r\nexport const toggleBoardFav = () => action(actionTypes.TOGGLE_BOARD_FAV);\r\n\r\nexport const toggleBoardPrivacy = () => {\r\n  console.log(\"xx\");\r\n  return action(actionTypes.TOGGLE_BOARD_PRIVACY);\r\n};\r\n\r\nexport const editBackground = (type, background) =>\r\n  action(actionTypes.EDIT_BACKGROUND, { type, background });\r\n","import React from \"react\";\r\nimport { Menu } from \"./BoardMenuStyle\";\r\nimport { NavButton } from \"../BoardNav/BoardNavStyle\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport BackgroundSelection from \"../Background/BackgroundSelection\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 300\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  }\r\n});\r\nconst BoardMenu = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      /* onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)} */\r\n    >\r\n      <BackgroundSelection />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Menu>\r\n      <NavButton onClick={toggleDrawer(\"right\", true)}>Background</NavButton>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={state.right}\r\n        onClose={toggleDrawer(\"right\", false)}\r\n      >\r\n        {sideList(\"right\")}\r\n      </Drawer>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default BoardMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  BoardNavWrapper,\r\n  BoardNavMain,\r\n  BoardTitle,\r\n  NavButton,\r\n  BoardStar,\r\n  Divider,\r\n  BoardPriv,\r\n  BoardIcon,\r\n  StyledInput\r\n} from \"./BoardNavStyle\";\r\n\r\nimport { FormEdit } from \"../List/TrelloListStyle\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  editBoardTitle,\r\n  toggleBoardFav,\r\n  toggleBoardPrivacy\r\n} from \"../../actions\";\r\nimport BoardMenu from \"../BoardMenu/BoardMenu\";\r\n\r\nconst BoardNav = ({\r\n  _boardTitle,\r\n  boardFav,\r\n  boardPriv,\r\n  toggleBoardFav,\r\n  editBoardTitle,\r\n  toggleBoardPrivacy\r\n}) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [boardTitle, setBoardTitle] = useState(_boardTitle);\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <FormEdit onSubmit={handleFinishEditing}>\r\n        <StyledInput\r\n          type=\"text\"\r\n          value={boardTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={handleFinishEditing}\r\n        />\r\n      </FormEdit>\r\n    );\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    console.log(\"hi\");\r\n\r\n    /* e.target.select(); */\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setBoardTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    editBoardTitle(\"board-0\", boardTitle);\r\n  };\r\n\r\n  return (\r\n    <BoardNavWrapper>\r\n      <BoardNavMain>\r\n        {isEditing ? (\r\n          renderEditInput()\r\n        ) : (\r\n          <BoardTitle onClick={() => setIsEditing(true)}>\r\n            {boardTitle}\r\n          </BoardTitle>\r\n        )}\r\n\r\n        <BoardStar onClick={toggleBoardFav}>\r\n          {/* start */}\r\n          <BoardIcon>{boardFav ? \"star\" : \"star_border\"}</BoardIcon>\r\n        </BoardStar>\r\n        <Divider />\r\n        <NavButton>{\"Dream Team\"}</NavButton>\r\n        <Divider />\r\n\r\n        {boardPriv ? (\r\n          <BoardPriv onClick={toggleBoardPrivacy}>\r\n            <BoardIcon>lock</BoardIcon>\r\n            Private\r\n          </BoardPriv>\r\n        ) : (\r\n          <BoardPriv onClick={toggleBoardPrivacy}>\r\n            <BoardIcon>lock_open</BoardIcon>\r\n            Public\r\n          </BoardPriv>\r\n        )}\r\n\r\n        <Divider />\r\n        <BoardMenu />\r\n      </BoardNavMain>\r\n    </BoardNavWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    _boardTitle: state.boards[\"board-0\"].title,\r\n    boardFav: state.boards[\"board-0\"].fav,\r\n    boardPriv: state.boards[\"board-0\"].privacy\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  editBoardTitle,\r\n  toggleBoardFav,\r\n  toggleBoardPrivacy\r\n})(BoardNav);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n  overflow-x: scroll;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Spacer = styled.div`\r\n  color: transparent;\r\n  height: 8rem;\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  text-align: left;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n\r\n  /* white-space: nowrap; */\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport TrelloList from \"../List/TrelloList\";\r\nimport BoardNav from \"../BoardNav/BoardNav\";\r\nimport TrelloActionButton from \"../ActionButton/TrelloActionButton\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { sort } from \"../../actions\";\r\n\r\nimport { Container, Spacer, AppWrapper } from \"./AppStyle\";\r\n\r\nclass App extends Component {\r\n  onDragEnd = result => {\r\n    // TODO: reordering logic\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) return; // Drag out of outer components\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { board, lists, background } = this.props;\r\n    console.log(board);\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <AppWrapper\r\n          style={\r\n            background.type == \"color\"\r\n              ? { backgroundColor: `${background.background}` }\r\n              : { backgroundImage: `url(${background.background})` }\r\n          }\r\n        >\r\n          <BoardNav />\r\n          {/* <Spacer /> */}\r\n          {/* <TrelloList title={\"test\"} /> */}\r\n          <Droppable droppableId={\"boardId\"} direction=\"horizontal\" type=\"list\">\r\n            {provider => (\r\n              <Container {...provider.droppableProps} ref={provider.innerRef}>\r\n                {/* lists.map((list, index) => (\r\n                  <TrelloList\r\n                    listId={list.id}\r\n                    key={list.id}\r\n                    title={list.title}\r\n                    cards={list.cards}\r\n                    index={index}\r\n                  />\r\n                )) */}\r\n                {board.lists.map((listId, index) => (\r\n                  <TrelloList listId={listId} key={listId} index={index} />\r\n                ))}\r\n                {provider.placeholder}\r\n                <TrelloActionButton list />\r\n              </Container>\r\n            )}\r\n          </Droppable>\r\n        </AppWrapper>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  const board = \"board-0\";\r\n  return {\r\n    lists: Object.values(state.lists),\r\n    board: state.boards[\"board-0\"],\r\n    background: state.boards[board].background\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps /* , { sort } */)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport App from \"./components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color:#333;\r\n    font-family: \"Open Sans\", sans-serif;\r\n    font-size: 14px;\r\n    color: #172b4d!important;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/scene1.03811d32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene2.1d01566a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene3.4be96530.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene4.c3461ca4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene5.133f90dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene6.cf2b528c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene7.a33cadf5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene8.c17ddaef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scene9.caa6d43a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunset.de0fc6d3.jpg\";"],"sourceRoot":""}